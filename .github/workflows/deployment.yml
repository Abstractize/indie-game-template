name: Azure Static Web Apps CI/CD

on:
    push:
        branches:
            - main
    pull_request:
        types: [opened, synchronize, reopened, closed]
        branches:
            - main

jobs:
    build_and_deploy_job:
        if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
        name: Build and Deploy
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                targetPlatform:
                    - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
                    - StandaloneWindows # Build a Windows standalone.
                    - StandaloneWindows64 # Build a Windows 64-bit standalone.
                    - StandaloneLinux64 # Build a Linux 64-bit standalone.
        steps:
            # Checkout
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  submodules: true

            # Cache
            - name: Cache
              uses: actions/cache@v2
              with:
                  path: Library
                  key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
                  restore-keys: |
                      Library-
            # Build
            - name: Build project
              uses: game-ci/unity-builder@v2
              env:
                  UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
                  UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
                  UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
              with:
                  targetPlatform: ${{ matrix.targetPlatform }}

            # Output
            - uses: actions/upload-artifact@v2
              with:
                  name: Build-${{ matrix.targetPlatform }}
                  path: build/${{ matrix.targetPlatform }}
    deploy:
        needs: build_and_deploy_job
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v2
              with:
                  fetch-depth: 0

            - name: Download StandaloneWindows64 Artifact
              uses: actions/download-artifact@v2
              with:
                  name: Build-StandaloneWindows64
                  path: build/StandaloneWindows64
            - name: Build project # This would actually build your project, using zip for an example artifact
                run: |
                    zip --junk-paths Build-StandaloneWindows64 build/StandaloneWindows64

            - name: Create Release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
                  asset_path: ./Build-StandaloneWindows64.zip
                  asset_name: Build-StandaloneWindows64.zip
                  asset_content_type: application/zip
